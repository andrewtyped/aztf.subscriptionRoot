parameters:
  - name: BuildPool
    type: string
    default: 'ubuntu-latest'
  - name: AzureArmServiceConnection
    type: string
    default: test0407-2
  - name: TerraformDirectory
    type: string
    default: $(Build.SourcesDirectory)/dev
  - name: DeploymentEnvironment
    type: string
    default: TfEnv

variables:
  - name: System.Debug
    value: true

stages:
  - stage: Build_TFPlan
    jobs:
      - job: Build_TFPlan
        pool: 
          vmImage: ${{ parameters.BuildPool }}
        steps:
          - template: /terraform-init.yml
            parameters:
              AzureArmServiceConnection: ${{ parameters.AzureArmServiceConnection }}
              TerraformDirectory: ${{ parameters. TerraformDirectory }}

          - task: AzureCLI@2
            name: Terraform_Plan
            env:
              ARM_CLIENT_ID: $(ARM_CLIENT_ID)
              ARM_OIDC_TOKEN: $(ARM_OIDC_TOKEN)
              ARM_TENANT_ID: $(ARM_TENANT_ID)
              ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
            inputs:
              addSpnToEnvironment: true
              azureSubscription: ${{ parameters.AzureArmServiceConnection }}
              scriptType: pscore
              scriptLocation: inlineScript
              workingDirectory: ${{ parameters.TerraformDirectory }}
              inlineScript: |
                Write-Host '##[section]Generate TF Plan'
                $Directory = '$(Build.ArtifactStagingDirectory)/tfplan'
                New-Item -ItemType Directory -Path $Directory -Force
                $PlanFile = Join-Path -Path $Directory -ChildPath terraform.plan
                & terraform plan -input=false --out=$PlanFile

                Write-Host '##[section]Show TF Plan (No Secrets)'
                $ShowFile = Join-Path -Path $Directory -ChildPath tfplan.txt
                & terraform show -no-color $PlanFile | Tee-Object -FilePath $ShowFile
                Write-Host "##vso[task.setvariable variable=TERRAFORM_PLAN_SHOW]$ShowFile"
                
          - task:  PublishPipelineArtifact@1
            name: Publish_TfPlan
            inputs:
              artifact: TerraformPlan
              targetPath: $(TERRAFORM_PLAN_SHOW)

  - stage: Deploy
    jobs:
      - deployment: Deploy
        environment: ${{ parameters.DeploymentEnvironment }}
        pool:
          vmImage: ${{ parameters.BuildPool}}
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - template: /terraform-init.yml
                  parameters:
                    AzureArmServiceConnection: ${{ parameters.AzureArmServiceConnection }}
                    TerraformDirectory: ${{ parameters.TerraformDirectory }}

                # Yes we are re-doing the plan. It's unsafe to publish the raw plan as an artifact b/c it contains plain text secrets.
                # Running plan during the build phase is just a nice sanity check.
                - task: AzureCLI@2
                  name: Terraform_Plan
                  env:
                    ARM_CLIENT_ID: $(ARM_CLIENT_ID)
                    ARM_OIDC_TOKEN: $(ARM_OIDC_TOKEN)
                    ARM_TENANT_ID: $(ARM_TENANT_ID)
                    ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
                  inputs:
                    addSpnToEnvironment: true
                    azureSubscription: ${{ parameters.AzureArmServiceConnection }}
                    scriptType: pscore
                    scriptLocation: inlineScript
                    workingDirectory: ${{ parameters.TerraformDirectory }}
                    inlineScript: |
                      Write-Host '##[section]Generate TF Plan'
                      $Directory = '$(Build.ArtifactStagingDirectory)/tfplan'
                      New-Item -ItemType Directory -Path $Directory -Force
                      $PlanFile = Join-Path -Path $Directory -ChildPath terraform.plan
                      & terraform plan -input=false --out=$PlanFile
                      Write-Host "##vso[task.setvariable variable=TERRAFORM_PLAN_PATH]$PlanFile"
                  
                - task: AzureCLI@2
                  name: Terraform_Apply
                  env:
                    ARM_CLIENT_ID: $(ARM_CLIENT_ID)
                    ARM_OIDC_TOKEN: $(ARM_OIDC_TOKEN)
                    ARM_TENANT_ID: $(ARM_TENANT_ID)
                    ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
                  inputs:
                    addSpnToEnvironment: true
                    azureSubscription: ${{ parameters. AzureArmServiceConnection }}
                    scriptType: pscore
                    scriptLocation: inlineScript
                    workingDirectory: ${{ parameters.TerraformDirectory }}
                    inlineScript: |
                      & terraform apply `
                        -input=false `
                        -auto-approve `
                        '$(TERRAFORM_PLAN_PATH)'

        


                

              
